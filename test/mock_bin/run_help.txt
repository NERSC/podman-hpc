Run a command in a new container

Description:
  Runs a command in a new container from the given image

Usage:
  podman run [options] IMAGE [COMMAND [ARG...]]

Examples:
  podman run imageID ls -alF /etc
  podman run --network=host imageID dnf -y install java
  podman run --volume /var/hostdir:/var/ctrdir -i -t fedora /bin/bash

Options:
      --add-host strings                         Add a custom host-to-IP mapping (host:ip) (default [])
      --annotation strings                       Add annotations to container (key=value)
      --arch ARCH                                use ARCH instead of the architecture of the machine for choosing images
  -a, --attach strings                           Attach to STDIN, STDOUT or STDERR
      --authfile string                          Path of the authentication file. Use REGISTRY_AUTH_FILE environment variable to override
      --blkio-weight string                      Block IO weight (relative weight) accepts a weight value between 10 and 1000.
      --blkio-weight-device DEVICE_NAME:WEIGHT   Block IO weight (relative device weight, format: DEVICE_NAME:WEIGHT)
      --cap-add strings                          Add capabilities to the container
      --cap-drop strings                         Drop capabilities from the container
      --cgroup-conf strings                      Configure cgroup v2 (key=value)
      --cgroup-parent string                     Optional parent cgroup for the container
      --cgroupns string                          cgroup namespace to use
      --cgroups string                           control container cgroup configuration ("enabled"|"disabled"|"no-conmon"|"split")
      --chrootdirs strings                       Chroot directories inside the container
      --cidfile string                           Write the container ID to the file
      --cpu-period uint                          Limit the CPU CFS (Completely Fair Scheduler) period
      --cpu-quota int                            Limit the CPU CFS (Completely Fair Scheduler) quota
      --cpu-rt-period uint                       Limit the CPU real-time period in microseconds
      --cpu-rt-runtime int                       Limit the CPU real-time runtime in microseconds
      --cpu-shares uint                          CPU shares (relative weight)
      --cpus float                               Number of CPUs. The default is 0.000 which means no limit
      --cpuset-cpus string                       CPUs in which to allow execution (0-3, 0,1)
      --cpuset-mems string                       Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.
  -d, --detach                                   Run container in background and print container ID
      --detach-keys [a-Z]                        Override the key sequence for detaching a container. Format is a single character [a-Z] or a comma separated sequence of `ctrl-<value>`, where `<value>` is one of: `a-cf`, `@`, `^`, `[`, `\`, `]`, `^` or `_` (default "ctrl-p,ctrl-q")
      --device strings                           Add a host device to the container
      --device-cgroup-rule strings               Add a rule to the cgroup allowed devices list
      --device-read-bps strings                  Limit read rate (bytes per second) from a device (e.g. --device-read-bps=/dev/sda:1mb)
      --device-read-iops strings                 Limit read rate (IO per second) from a device (e.g. --device-read-iops=/dev/sda:1000)
      --device-write-bps strings                 Limit write rate (bytes per second) to a device (e.g. --device-write-bps=/dev/sda:1mb)
      --device-write-iops strings                Limit write rate (IO per second) to a device (e.g. --device-write-iops=/dev/sda:1000)
      --disable-content-trust                    This is a Docker specific option and is a NOOP
      --dns strings                              Set custom DNS servers
      --dns-opt strings                          Set custom DNS options
      --dns-search strings                       Set custom DNS search domains
      --entrypoint string                        Overwrite the default ENTRYPOINT of the image
  -e, --env stringArray                          Set environment variables in container
      --env-file strings                         Read in a file of environment variables
      --expose strings                           Expose a port or a range of ports
      --gidmap strings                           GID map to use for the user namespace
      --group-add strings                        Add additional groups to the primary container process. 'keep-groups' allows container processes to use supplementary groups.
      --health-cmd string                        set a healthcheck command for the container ('none' disables the existing healthcheck)
      --health-interval string                   set an interval for the healthchecks (a value of disable results in no automatic timer setup) (default "30s")
      --health-retries uint                      the number of retries allowed before a healthcheck is considered to be unhealthy (default 3)
      --health-start-period string               the initialization time needed for a container to bootstrap (default "0s")
      --health-timeout string                    the maximum time allowed to complete the healthcheck before an interval is considered failed (default "30s")
  -h, --hostname string                          Set container hostname
      --hostuser strings                         Host user account to add to /etc/passwd within container
      --image-volume string                      Tells podman how to handle the builtin image volumes ("bind"|"tmpfs"|"ignore") (default "bind")
      --init                                     Run an init binary inside the container that forwards signals and reaps processes
      --init-path string                         Path to the container-init binary
  -i, --interactive                              Keep STDIN open even if not attached
      --ip string                                Specify a static IPv4 address for the container
      --ip6 string                               Specify a static IPv6 address for the container
      --ipc string                               IPC namespace to use
  -l, --label stringArray                        Set metadata on container
      --label-file strings                       Read in a line delimited file of labels
      --log-driver string                        Logging driver for the container
      --log-opt strings                          Logging driver options
      --mac-address string                       Container MAC address (e.g. 92:d0:c6:0a:29:33)
  -m, --memory <number>[<unit>]                  Memory limit (format: <number>[<unit>], where unit = b (bytes), k (kibibytes), m (mebibytes), or g (gibibytes))
      --memory-reservation <number>[<unit>]      Memory soft limit (format: <number>[<unit>], where unit = b (bytes), k (kibibytes), m (mebibytes), or g (gibibytes))
      --memory-swap string                       Swap limit equal to memory plus swap: '-1' to enable unlimited swap
      --memory-swappiness int                    Tune container memory swappiness (0 to 100, or -1 for system default) (default -1)
      --mount stringArray                        Attach a filesystem mount to the container
      --name string                              Assign a name to the container
      --network stringArray                      Connect a container to a network
      --network-alias strings                    Add network-scoped alias for the container
      --no-healthcheck                           Disable healthchecks on container
      --no-hosts                                 Do not create /etc/hosts within the container, instead use the version from the image
      --oom-kill-disable                         Disable OOM Killer
      --oom-score-adj int                        Tune the host's OOM preferences (-1000 to 1000)
      --os OS                                    use OS instead of the running OS for choosing images
      --passwd                                   add entries to /etc/passwd and /etc/group (default true)
      --passwd-entry string                      Entry to write to /etc/passwd
      --personality string                       Configure execution domain using personality (e.g., LINUX/LINUX32)
      --pid string                               PID namespace to use
      --pids-limit int                           Tune container pids limit (set -1 for unlimited) (default -1)
      --platform string                          Specify the platform for selecting the image.  (Conflicts with --arch and --os)
      --pod string                               Run container in an existing pod
      --pod-id-file string                       Read the pod ID from the file
      --privileged                               Give extended privileges to container
  -p, --publish strings                          Publish a container's port, or a range of ports, to the host (default [])
  -P, --publish-all                              Publish all exposed ports to random ports on the host interface
      --pull string                              Pull image before creating ("always"|"missing"|"never")
  -q, --quiet                                    Suppress output information when pulling images
      --read-only                                Make containers root filesystem read-only
      --read-only-tmpfs                          When running containers in read-only mode mount a read-write tmpfs on /run, /tmp and /var/tmp (default true)
      --replace                                  If a container with the same name exists, replace it
      --requires strings                         Add one or more requirement containers that must be started before this container will start
      --restart string                           Restart policy to apply when a container exits ("always"|"no"|"on-failure"|"unless-stopped")
      --rm                                       Remove container (and pod if created) after exit
      --rmi                                      Remove container image unless used by other containers
      --rootfs                                   The first argument is not an image but the rootfs to the exploded container
      --sdnotify string                          control sd-notify behavior ("container"|"conmon"|"ignore") (default "container")
      --seccomp-policy string                    Policy for selecting a seccomp profile (experimental) (default "default")
      --secret stringArray                       Add secret to container
      --security-opt stringArray                 Security Options
      --shm-size <number>[<unit>]                Size of /dev/shm (format: <number>[<unit>], where unit = b (bytes), k (kibibytes), m (mebibytes), or g (gibibytes))
      --sig-proxy                                Proxy received signals to the process (default true)
      --stop-signal string                       Signal to stop a container. Default is SIGTERM
      --stop-timeout uint                        Timeout (in seconds) that containers stopped by user command have to exit. If exceeded, the container will be forcibly stopped via SIGKILL. (default 10)
      --subgidname string                        Name of range listed in /etc/subgid for use in user namespace
      --subuidname string                        Name of range listed in /etc/subuid for use in user namespace
      --sysctl strings                           Sysctl options
      --systemd string                           Run container in systemd mode ("true"|"false"|"always") (default "true")
      --timeout uint                             Maximum length of time a container is allowed to run. The container will be killed automatically after the time expires.
      --tls-verify                               Require HTTPS and verify certificates when contacting registries for pulling images
      --tmpfs tmpfs                              Mount a temporary filesystem (tmpfs) into a container
  -t, --tty                                      Allocate a pseudo-TTY for container
      --tz string                                Set timezone in container
      --uidmap strings                           UID map to use for the user namespace
      --ulimit strings                           Ulimit options
      --umask string                             Set umask in container (default "0022")
      --unsetenv stringArray                     Unset environment default variables in container
      --unsetenv-all                             Unset all default environment variables in container
  -u, --user string                              Username or UID (format: <name|uid>[:<group|gid>])
      --userns string                            User namespace to use
      --uts string                               UTS namespace to use
      --variant VARIANT                          Use VARIANT instead of the running architecture variant for choosing images
  -v, --volume stringArray                       Bind mount a volume into the container. Volume source will be on the server machine, not the client
      --volumes-from stringArray                 Mount volumes from the specified container(s)
  -w, --workdir string                           Working directory inside the container

